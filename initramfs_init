#!/bin/busybox sh
export PATH=/sbin:/bin

busybox mount -t proc none /proc
busybox mount -t sysfs none /sys
busybox mount -t devtmpfs none /dev
busybox --install -s
ln -s /proc/mounts /etc/mtab

if ! grep -q 'sse4_2' /proc/cpuinfo; then
	echo 0 0 0 0 > /proc/sys/kernel/printk
	echo "brunch: This CPU is not compatible with Brunch, please refer to the Brunch github for more information." > /dev/kmsg
	if [ -f /bootsplash/incompatible.png ]; then fbv -f /bootsplash/incompatible.png & fi
	sleep 90
	reboot -f
fi

if [ -f /bootsplash/main.png ]; then fbv -f /bootsplash/main.png & fi

haveged -w 1024 -v 1 -F > /dev/kmsg 2>&1 &

# Wait 10s for block devices to be available by default, this can be overrided by setting "brunch_timeout" value on kernel command line
if [ ! -z "$brunch_timeout" ]; then
	sleep "$brunch_timeout"
fi

if [ ! -z "$img_uuid" ] && [ ! -z "$img_path" ]; then img_part=$(blkid | grep -i "$img_uuid" | awk -F: '{ print $1 }'); fi

if [ -e "$img_part" ] && [ ! -z "$img_path" ]; then
	mkdir /mainroot
	fstype=$(blkid -s TYPE -o value "$img_part")
	if [ "$fstype" == "ntfs" ]; then
		ntfs-3g "$img_part" /mainroot
	else
		mount -n "$img_part" /mainroot
	fi
	if [ -f /mainroot/"$img_path" ]; then
		mknod -m660 /dev/loop15 b 7 480
		losetup -P /dev/loop15 /mainroot"$img_path"
		bootdevice=/dev/loop15
		partpath=/dev/loop15p
	else
		echo "brunch: ChromeOS loopfile $img_path not found on device $img_part..." > /dev/kmsg
	fi
else
	for sysblock in /sys/block/*; do
		if [ "${sysblock/\/sys\/block\/fd/}" == "$sysblock" ] && [ "${sysblock/\/sys\/block\/loop/}" == "$sysblock" ]; then
			device=${sysblock/\/sys\/block\//\/dev\/}
			if (expr match "$device" ".*[0-9]$" >/dev/null); then
				devicepart="$device"p
			else
				devicepart="$device"
			fi
			echo "brunch: Scanning device $device" > /dev/kmsg
			if [ -b "$devicepart"1 ] && [ -b "$devicepart"3 ] && [ "$(blkid -s PARTLABEL -o value "$devicepart"1)" == "STATE" ] && [ "$(blkid -s PARTLABEL -o value "$devicepart"3)" == "ROOT-A" ]; then
				bootdevice="$device"
				partpath="$devicepart"
				if [ "$(cat $sysblock/removable)" -eq 1 ]; then
					echo "brunch: ChromeOS found on removable device, booting it !" > /dev/kmsg
					echo "0" > "$sysblock"/removable
					break
				else
					echo "brunch: ChromeOS found on fixed device $bootdevice, keep scanning for removable devices..." > /dev/kmsg
				fi
			fi
		fi
	done
fi
if [ -z "$bootdevice" ] || [ -z "$partpath" ]; then echo "brunch: ChromeOS was not found on any device, falling back to shell..." > /dev/kmsg; exec sh; fi

mkdir -p /data /roota
e2fsck -y "$partpath"3
mount "$partpath"3 /roota

mount --move /dev /roota/dev
mount --move /sys /roota/sys
mount --move /proc /roota/proc

sync

exec switch_root /roota /sbin/init "$@"

